version: "3.2"

services:
  zookeeper:
    image: docker.io/bitnami/zookeeper
    ports:
      - "2181:2181"
    volumes:
      - "zookeeper_data:/bitnami"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
  kafka:
    image: docker.io/bitnami/kafka
    ports:
      - "9092:9092"
    volumes:
      - "kafka_data:/bitnami"
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
    depends_on:
      - zookeeper
  nginx:
    restart: unless-stopped
    build:
      context: .
      dockerfile: ./docker_setup/nginx/Dockerfile
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - ./docker_setup/nginx/:/etc/ngix/conf.d
    ports: 
      - 8080:8080
    networks:
      - nginx_network
  backends:
    build:
      context: .
      dockerfile: ./docker_setup/backends/Dockerfile
  django_backend:
    build:
      context: .
      dockerfile: ./docker_setup/backends/django_backend/Dockerfile
    networks:
      - nginx_network
  flask_backend:
    build:
      context: .
      dockerfile: ./docker_setup/backends/flask_backend/Dockerfile
    networks:
      - nginx_network
  

volumes:
  static_volume: {}
  zookeeper_data:
    driver: local
  kafka_data:
    driver: local


networks:
  nginx_network:
    driver: bridge